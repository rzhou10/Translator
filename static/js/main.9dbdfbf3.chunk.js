(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,n){},16:function(e,t,n){},17:function(e,t,n){"use strict";n.r(t);var o=n(0),i=n.n(o),a=n(7),r=n.n(a),l=(n(15),n(1)),s=n(2),d=n(4),c=n(3),f=n(5),u=n(8),m={"C++":{boolean:{keyword:"bool",definition:"True/false."},byte:{keyword:"byte",definition:"A number from -256 to 255."},character:{keyword:"char",definition:"A unicode character"},short:{keyword:"short int",definition:"A number from -32,768 to 32,767."},int:{keyword:"int",definition:"A number from -32,768 to 32,767."},float:{keyword:"float",definition:"A number between \xb13.40282347E+38F."},long:{keyword:"long",definition:"A number from -2,147,483,648 to 2,147,483,647."},double:{keyword:"double",definition:"A number between \xb11.79769313486231570E+308."},print:{keyword:"cout << <text>",definition:"Displays text on a screen."},if:{keyword:"if (condition)",defintion:"Conditional that if true, will execute a function or displays text."},elseif:{keyword:"else if (condition)",defintion:"Conditional that if the if statement returns false, will execute a function or displays text."},else:{keyword:"else",defintion:"Conditional that if the if statement and any else if statements return false, will execute a function or displays text."},for:{keyword:"for (<iterator>, <condition>, <incrementor>)",definition:"Statement that allows iteration so that a piece of code is continuously executed."},while:{keyword:"while (condition)",definition:"Statement that continuously executes based a on a boolean condition."},dowhile:{keyword:"do <statement> while(condition)",definition:"Statement that runs before checking that a condition is valid."},foreach:{keyword:"for (incrementor : <enumerable object>)",definition:"Statement iterates over the entire enumerable object."},function:{keyword:"<access modifier> <return type> <function name>(<parameters>)",definition:"A group of statements that together perform a task."},class:{keyword:"class <class Name>",definition:"A data type that can hold its own members."}},Java:{boolean:{keyword:"boolean",definition:"True/false."},byte:{keyword:"byte",definition:"A number from -256 to 255."},character:{keyword:"char",definition:"A unicode character"},short:{keyword:"short",definition:"A number from -32,768 to 32,767."},int:{keyword:"int",definition:"A number from -2,147,483,648 to 2,147,483,647."},float:{keyword:"float",definition:"A number between \xb13.40282347E+38F."},long:{keyword:"long",definition:"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80"},double:{keyword:"double",definition:"A number between \xb11.79769313486231570E+308"},print:{keyword:"System.out.println(<text>)",definition:"Displays text on a screen."},if:{keyword:"if (condition)",defintion:"Conditional that if true, will execute a function or displays text."},elseif:{keyword:"else if (condition)",defintion:"Conditional that if the if statement returns false, will execute a function or displays text."},else:{keyword:"else",defintion:"Conditional that if the if statement and any else if statements return false, will execute a function or displays text."},for:{keyword:"for (<iterator>, <condition>, <incrementor>)",definition:"Statement that allows iteration so that a piece of code is continuously executed."},while:{keyword:"while (condition)",definition:"Statement that continuously executes based a on a boolean condition."},dowhile:{keyword:"do <statement> while(condition);",definition:"Statement that runs before checking that a condition is valid."},foreach:{keyword:"for (incrementor : <enumerable object>)",definition:"Statement iterates over the entire enumerable object."},function:{keyword:"<access modifier> <return type> <function name>(<parameters>)",definition:"A group of statements that together perform a task."},class:{keyword:"class <class Name>",definition:"A data type that can hold its own members."}},"C#":{boolean:{keyword:"bool",definition:"True/false."},byte:{keyword:"byte",definition:"A number from 0 to 255."},character:{keyword:"char",definition:"A unicode character"},short:{keyword:"short",definition:"A number from -32,768 to 32,767."},int:{keyword:"int",definition:"A number from -2,147,483,648 to 2,147,483,647."},float:{keyword:"float",definition:"A number from \xb11.5 x 10\u221245 to \xb13.40282347E+38F."},long:{keyword:"long",definition:"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80"},double:{keyword:"double",definition:"A number from \xb15.0 \xd7 10\u2212324 to \xb11.79769313486231570E+308"},print:{keyword:"Console.WriteLine(<text>)",definition:"Displays text on a screen."},if:{keyword:"if (condition)",defintion:"Conditional that if true, will execute a function or displays text."},elseif:{keyword:"else if (condition)",defintion:"Conditional that if the if statement returns false, will execute a function or displays text."},else:{keyword:"else",defintion:"Conditional that if the if statement and any else if statements return false, will execute a function or displays text."},for:{keyword:"for (<iterator>, <condition>, <incrementor>)",definition:"Statement that allows iteration so that a piece of code is continuously executed."},while:{keyword:"while (condition)",definition:"Statement that continuously executes based a on a boolean condition."},dowhile:{keyword:"do <statement> while(condition);",definition:"Statement that runs before checking that a condition is valid."},foreach:{keyword:"foreach (incrementor in <enumerable object>)",definition:"Statement iterates over the entire enumerable object."},function:{keyword:"<access modifier> <return type> <function name>(<parameters>)",definition:"A group of statements that together perform a task."},class:{keyword:"class <class Name>",definition:"A data type that can hold its own members."}},JavaScript:{boolean:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"True/false."},byte:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"A number from 0 to 255."},character:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"A unicode character"},short:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"A number from -32,768 to 32,767."},int:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"A number from -2,147,483,648 to 2,147,483,647."},float:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"A number from \xb11.5 x 10\u221245 to \xb13.40282347E+38F."},long:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80"},double:{keyword:"JavaScript is dynamically typed, so use var, let, const.",definition:"A number from \xb15.0 \xd7 10\u2212324 to \xb11.79769313486231570E+308"},print:{keyword:"console.log(<text>)",definition:"Displays text on a screen."},if:{keyword:"if (condition)",defintion:"Conditional that if true, will execute a function or displays text."},elseif:{keyword:"else if (condition)",defintion:"Conditional that if the if statement returns false, will execute a function or displays text."},else:{keyword:"else",defintion:"Conditional that if the if statement and any else if statements return false, will execute a function or displays text."},for:{keyword:"for (<iterator>, <condition>, <incrementor>)",definition:"Statement that allows iteration so that a piece of code is continuously executed."},while:{keyword:"while (condition)",definition:"Statement that continuously executes based a on a boolean condition."},dowhile:{keyword:"do <statement> while(condition);",definition:"Statement that runs before checking that a condition is valid."},foreach:{keyword:"for (incrementor of <enumerable object>)",definition:"Statement iterates over the entire enumerable object."},function:{keyword:"<function name>(<parameters>)",definition:"A group of statements that together perform a task."},class:{keyword:"class <class Name>",definition:"A data type that can hold its own members."}},Python:{boolean:{keyword:"Python is dynamically typed so there is no need to declare the data type.",definition:"True/false."},byte:{keyword:"Python is dynamically typed so there is no need to declare the data type.",definition:"A number from -256 to 255."},char:{keyword:"Python is dynamically typed so there is no need to declare the data type.",definition:"A unicode character."},short:{keyword:'Python does not have a short declaration but you can use short integers in arrays via a=array("h")',definition:"A number from -32,768 to 32,767."},int:{keyword:"Python is dynamically typed so there is no need to declare the data type.",definition:"A number from -2,147,483,648 to 2,147,483,647."},float:{keyword:"Python is dynamically typed so there is no need to declare the data type.",definition:"A number between \xb13.40282347E+38F."},long:{keyword:"Python is dynamically typed so there is no need to declare the data type.",definition:"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80"},double:{keyword:"Python is dynamically typed so there is no need to declare the data type.",definition:"A number between \xb11.79769313486231570E+308"},print:{keyword:"print(<text>)",definition:"Displays text on a screen."},if:{keyword:"if condition:",defintion:"Conditional that if true, will execute a function or displays text."},elseif:{keyword:"elif condition:",defintion:"Conditional that if the if statement returns false, will execute a function or displays text."},else:{keyword:"else",defintion:"Conditional that if the if statement and any else if statements return false, will execute a function or displays text."},for:{keyword:"for <iterator>, <condition>:",definition:"Statement that allows iteration so that a piece of code is continuously executed."},while:{keyword:"while condition:",definition:"Statement that continuously executes based a on a boolean condition."},dowhile:{keyword:"There is no built in do-while loop in Python",definition:"Statement that runs before checking that a condition is valid."},foreach:{keyword:"for <iterator> in <object>",definition:"Statement iterates over the entire enumerable object."},function:{keyword:"def <function name>(<parameters>):",definition:"A group of statements that together perform a task."},class:{keyword:"class <class Name>:",definition:"A data type that can hold its own members."}}},y={Java:"Red","C++":"DeepPink","C#":"DarkGreen",JavaScript:"Yellow",Python:"SteelBlue"},h=function(e){function t(e){return Object(l.a)(this,t),Object(d.a)(this,Object(c.a)(t).call(this,e))}return Object(f.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return i.a.createElement("p",null,"In: ",i.a.createElement("span",{style:{color:y[this.props.language]}},this.props.language))}}]),t}(o.Component),w=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(d.a)(this,Object(c.a)(t).call(this,e))).handleChange=function(e){n.setState(Object(u.a)({},e.target.name,e.target.value))},n.onSubmit=function(e){if(e.preventDefault(),""===n.state.from||""===n.state.to)alert("Please select a language.");else if(n.state.from===n.state.to)alert("Please select different languages");else if(m[n.state.from].hasOwnProperty(n.state.keyword)){var t=m[n.state.to][n.state.keyword].keyword,o=m[n.state.to][n.state.keyword].definition;n.setState({resultLang:n.state.to,syntax:t,toDefinition:o})}},n.renderDef=function(){return""===n.state.toDefinition?i.a.createElement("div",null):i.a.createElement("div",null,i.a.createElement(h,{language:n.state.resultLang}),i.a.createElement("p",null,"Syntax: ",n.state.syntax),i.a.createElement("p",null,"Definition: ",n.state.toDefinition))},n.state={from:"",keyword:"boolean",to:"",resultLang:"",syntax:"",toDefinition:""},n}return Object(f.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{className:"container"},i.a.createElement("h1",null,"Code Translator"),i.a.createElement("p",null,"Have you ever forgotten a specific syntax in a new language you're learning? Or you are you trying to get back and need a refresher? Code Translator will help you find a keyword in what ever language you will need."),i.a.createElement("form",{onSubmit:this.onSubmit},i.a.createElement("div",{className:"row"},i.a.createElement("div",{className:"cell"},i.a.createElement("select",{name:"from",value:this.state.from,onChange:this.handleChange},i.a.createElement("option",{value:""}),i.a.createElement("option",{value:"C++"},"C++"),i.a.createElement("option",{value:"Java"},"Java"),i.a.createElement("option",{value:"C#"},"C#"),i.a.createElement("option",{value:"JavaScript"},"JavaScript"),i.a.createElement("option",{value:"Python"},"Python"))),i.a.createElement("div",{id:"keyword",className:"cell"},i.a.createElement("select",{name:"keyword",value:this.state.keyword,onChange:this.handleChange},i.a.createElement("option",{value:"boolean"},"boolean"),i.a.createElement("option",{value:"byte"},"byte"),i.a.createElement("option",{value:"character"},"char"),i.a.createElement("option",{value:"short"},"short"),i.a.createElement("option",{value:"int"},"int"),i.a.createElement("option",{value:"float"},"float"),i.a.createElement("option",{value:"long"},"long"),i.a.createElement("option",{value:"double"},"double"),i.a.createElement("option",{value:"print"},"print"),i.a.createElement("option",{value:"if"},"if"),i.a.createElement("option",{value:"elseif"},"else if"),i.a.createElement("option",{value:"else"},"else"),i.a.createElement("option",{value:"for"},"for"),i.a.createElement("option",{value:"while"},"while"),i.a.createElement("option",{value:"dowhile"},"do while"),i.a.createElement("option",{value:"foreach"},"foreach"),i.a.createElement("option",{value:"function"},"function"),i.a.createElement("option",{value:"class"},"class")),i.a.createElement("div",{className:"cell"},i.a.createElement("input",{type:"submit",value:"Translate!"}))),i.a.createElement("div",{className:"cell"},i.a.createElement("select",{name:"to",value:this.state.to,onChange:this.handleChange},i.a.createElement("option",{value:""}),i.a.createElement("option",{value:"C++"},"C++"),i.a.createElement("option",{value:"Java"},"Java"),i.a.createElement("option",{value:"C#"},"C#"),i.a.createElement("option",{value:"JavaScript"},"JavaScript"),i.a.createElement("option",{value:"Python"},"Python"))))),this.renderDef())}}]),t}(o.Component),p=(n(16),function(e){function t(){return Object(l.a)(this,t),Object(d.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return i.a.createElement("div",{id:"whole"},i.a.createElement(w,null))}}]),t}(o.Component)),b=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function k(e,t){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}}).catch(function(e){console.error("Error during service worker registration:",e)})}r.a.render(i.a.createElement(p,null),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/Translator",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",function(){var t="".concat("/Translator","/service-worker.js");b?(function(e,t){fetch(e).then(function(n){var o=n.headers.get("content-type");404===n.status||null!=o&&-1===o.indexOf("javascript")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):k(e,t)}).catch(function(){console.log("No internet connection found. App is running in offline mode.")})}(t,e),navigator.serviceWorker.ready.then(function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA")})):k(t,e)})}}()},9:function(e,t,n){e.exports=n(17)}},[[9,1,2]]]);
//# sourceMappingURL=main.9dbdfbf3.chunk.js.map