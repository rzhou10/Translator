{"version":3,"sources":["components/keywords.js","components/colorCode.js","components/LanguageDetect.js","components/Translator.js","App.js","serviceWorker.js","index.js"],"names":["keywords","C++","boolean","keyword","definition","byte","character","short","int","float","long","double","print","if","defintion","elseif","else","for","while","dowhile","foreach","function","class","Java","C#","JavaScript","Python","char","colorCode","LanguageDetect","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","style","color","language","Component","Translator","_this","handleChange","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","state","from","to","alert","hasOwnProperty","syntax","def","resultLang","toDefinition","renderDef","components_LanguageDetect","className","onChange","id","type","App","components_Translator","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9dbdfbf3.chunk.js","sourcesContent":["const keywords = {\n    \"C++\": {\n        \"boolean\": {\n            \"keyword\": \"bool\",\n            \"definition\": \"True/false.\"\n        },\n        \"byte\": {\n            \"keyword\": \"byte\",\n            \"definition\": \"A number from -256 to 255.\"\n        },\n        \"character\": {\n            \"keyword\": \"char\",\n            \"definition\": \"A unicode character\"\n        },\n        \"short\": {\n            \"keyword\": \"short int\",\n            \"definition\": \"A number from -32,768 to 32,767.\"\n        },\n        \"int\": {\n            \"keyword\": \"int\",\n            \"definition\": \"A number from -32,768 to 32,767.\"\n        },\n        \"float\": {\n            \"keyword\": \"float\",\n            \"definition\": \"A number between Â±3.40282347E+38F.\"\n        },\n        \"long\": {\n            \"keyword\": \"long\",\n            \"definition\": \"A number from -2,147,483,648 to 2,147,483,647.\"\n        },\n        \"double\": {\n            \"keyword\": \"double\",\n            \"definition\": \"A number between Â±1.79769313486231570E+308.\"\n        },\n        \"print\": {\n            \"keyword\": \"cout << <text>\",\n            \"definition\": \"Displays text on a screen.\"\n        },\n        \"if\": {\n            \"keyword\": \"if (condition)\",\n            \"defintion\": \"Conditional that if true, will execute a function or displays text.\"\n        },\n        \"elseif\": {\n            \"keyword\": \"else if (condition)\",\n            \"defintion\": \"Conditional that if the if statement returns false, will execute a function or displays text.\"\n        },\n        \"else\": {\n            \"keyword\": \"else\",\n            \"defintion\": \"Conditional that if the if statement and any else if statements return false, will execute a function or displays text.\"\n        },\n        \"for\": {\n            \"keyword\": \"for (<iterator>, <condition>, <incrementor>)\",\n            \"definition\": \"Statement that allows iteration so that a piece of code is continuously executed.\"\n        },\n        \"while\": {\n            \"keyword\": \"while (condition)\",\n            \"definition\": \"Statement that continuously executes based a on a boolean condition.\"\n        },\n        \"dowhile\": {\n            \"keyword\": \"do <statement> while(condition)\",\n            \"definition\": \"Statement that runs before checking that a condition is valid.\"\n        },\n        \"foreach\": {\n            \"keyword\": \"for (incrementor : <enumerable object>)\",\n            \"definition\": \"Statement iterates over the entire enumerable object.\"\n        },\n        \"function\": {\n            \"keyword\": \"<access modifier> <return type> <function name>(<parameters>)\",\n            \"definition\": \"A group of statements that together perform a task.\"\n        },\n        \"class\": {\n            \"keyword\": \"class <class Name>\",\n            \"definition\": \"A data type that can hold its own members.\"\n        }\n    },\n    \"Java\": {\n        \"boolean\": {\n            \"keyword\": \"boolean\",\n            \"definition\": \"True/false.\"\n        },\n        \"byte\": {\n            \"keyword\": \"byte\",\n            \"definition\": \"A number from -256 to 255.\"\n        },\n        \"character\": {\n            \"keyword\": \"char\",\n            \"definition\": \"A unicode character\"\n        },\n        \"short\": {\n            \"keyword\": \"short\",\n            \"definition\": \"A number from -32,768 to 32,767.\"\n        },\n        \"int\": {\n            \"keyword\": \"int\",\n            \"definition\": \"A number from -2,147,483,648 to 2,147,483,647.\"\n        },\n        \"float\": {\n            \"keyword\": \"float\",\n            \"definition\": \"A number between Â±3.40282347E+38F.\"\n        },\n        \"long\": {\n            \"keyword\": \"long\",\n            \"definition\": \"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80\"\n        },\n        \"double\": {\n            \"keyword\": \"double\",\n            \"definition\": \"A number between Â±1.79769313486231570E+308\"\n        },\n        \"print\": {\n            \"keyword\": \"System.out.println(<text>)\",\n            \"definition\": \"Displays text on a screen.\"\n        },\n        \"if\": {\n            \"keyword\": \"if (condition)\",\n            \"defintion\": \"Conditional that if true, will execute a function or displays text.\"\n        },\n        \"elseif\": {\n            \"keyword\": \"else if (condition)\",\n            \"defintion\": \"Conditional that if the if statement returns false, will execute a function or displays text.\"\n        },\n        \"else\": {\n            \"keyword\": \"else\",\n            \"defintion\": \"Conditional that if the if statement and any else if statements return false, will execute a function or displays text.\"\n        },\n        \"for\": {\n            \"keyword\": \"for (<iterator>, <condition>, <incrementor>)\",\n            \"definition\": \"Statement that allows iteration so that a piece of code is continuously executed.\"\n        },\n        \"while\": {\n            \"keyword\": \"while (condition)\",\n            \"definition\": \"Statement that continuously executes based a on a boolean condition.\"\n        },\n        \"dowhile\": {\n            \"keyword\": \"do <statement> while(condition);\",\n            \"definition\": \"Statement that runs before checking that a condition is valid.\"\n        },\n        \"foreach\": {\n            \"keyword\": \"for (incrementor : <enumerable object>)\",\n            \"definition\": \"Statement iterates over the entire enumerable object.\"\n        },\n        \"function\": {\n            \"keyword\": \"<access modifier> <return type> <function name>(<parameters>)\",\n            \"definition\": \"A group of statements that together perform a task.\"\n        },\n        \"class\": {\n            \"keyword\": \"class <class Name>\",\n            \"definition\": \"A data type that can hold its own members.\"\n        }\n    },\n    \"C#\": {\n        \"boolean\": {\n            \"keyword\": \"bool\",\n            \"definition\": \"True/false.\"\n        },\n        \"byte\": {\n            \"keyword\": \"byte\",\n            \"definition\": \"A number from 0 to 255.\"\n        },\n        \"character\": {\n            \"keyword\": \"char\",\n            \"definition\": \"A unicode character\"\n        },\n        \"short\": {\n            \"keyword\": \"short\",\n            \"definition\": \"A number from -32,768 to 32,767.\"\n        },\n        \"int\": {\n            \"keyword\": \"int\",\n            \"definition\": \"A number from -2,147,483,648 to 2,147,483,647.\"\n        },\n        \"float\": {\n            \"keyword\": \"float\",\n            \"definition\": \"A number from Â±1.5 x 10â45 to Â±3.40282347E+38F.\"\n        },\n        \"long\": {\n            \"keyword\": \"long\",\n            \"definition\": \"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80\"\n        },\n        \"double\": {\n            \"keyword\": \"double\",\n            \"definition\": \"A number from Â±5.0 Ã 10â324 to Â±1.79769313486231570E+308\"\n        },\n        \"print\": {\n            \"keyword\": \"Console.WriteLine(<text>)\",\n            \"definition\": \"Displays text on a screen.\"\n        },\n        \"if\": {\n            \"keyword\": \"if (condition)\",\n            \"defintion\": \"Conditional that if true, will execute a function or displays text.\"\n        },\n        \"elseif\": {\n            \"keyword\": \"else if (condition)\",\n            \"defintion\": \"Conditional that if the if statement returns false, will execute a function or displays text.\"\n        },\n        \"else\": {\n            \"keyword\": \"else\",\n            \"defintion\": \"Conditional that if the if statement and any else if statements return false, will execute a function or displays text.\"\n        },\n        \"for\": {\n            \"keyword\": \"for (<iterator>, <condition>, <incrementor>)\",\n            \"definition\": \"Statement that allows iteration so that a piece of code is continuously executed.\"\n        },\n        \"while\": {\n            \"keyword\": \"while (condition)\",\n            \"definition\": \"Statement that continuously executes based a on a boolean condition.\"\n        },\n        \"dowhile\": {\n            \"keyword\": \"do <statement> while(condition);\",\n            \"definition\": \"Statement that runs before checking that a condition is valid.\"\n        },\n        \"foreach\": {\n            \"keyword\": \"foreach (incrementor in <enumerable object>)\",\n            \"definition\": \"Statement iterates over the entire enumerable object.\"\n        },\n        \"function\": {\n            \"keyword\": \"<access modifier> <return type> <function name>(<parameters>)\",\n            \"definition\": \"A group of statements that together perform a task.\"\n        },\n        \"class\": {\n            \"keyword\": \"class <class Name>\",\n            \"definition\": \"A data type that can hold its own members.\"\n        }\n    },\n    \"JavaScript\": {\n        \"boolean\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"True/false.\"\n        },\n        \"byte\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"A number from 0 to 255.\"\n        },\n        \"character\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"A unicode character\"\n        },\n        \"short\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"A number from -32,768 to 32,767.\"\n        },\n        \"int\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"A number from -2,147,483,648 to 2,147,483,647.\"\n        },\n        \"float\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"A number from Â±1.5 x 10â45 to Â±3.40282347E+38F.\"\n        },\n        \"long\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80\"\n        },\n        \"double\": {\n            \"keyword\": \"JavaScript is dynamically typed, so use var, let, const.\",\n            \"definition\": \"A number from Â±5.0 Ã 10â324 to Â±1.79769313486231570E+308\"\n        },\n        \"print\": {\n            \"keyword\": \"console.log(<text>)\",\n            \"definition\": \"Displays text on a screen.\"\n        },\n        \"if\": {\n            \"keyword\": \"if (condition)\",\n            \"defintion\": \"Conditional that if true, will execute a function or displays text.\"\n        },\n        \"elseif\": {\n            \"keyword\": \"else if (condition)\",\n            \"defintion\": \"Conditional that if the if statement returns false, will execute a function or displays text.\"\n        },\n        \"else\": {\n            \"keyword\": \"else\",\n            \"defintion\": \"Conditional that if the if statement and any else if statements return false, will execute a function or displays text.\"\n        },\n        \"for\": {\n            \"keyword\": \"for (<iterator>, <condition>, <incrementor>)\",\n            \"definition\": \"Statement that allows iteration so that a piece of code is continuously executed.\"\n        },\n        \"while\": {\n            \"keyword\": \"while (condition)\",\n            \"definition\": \"Statement that continuously executes based a on a boolean condition.\"\n        },\n        \"dowhile\": {\n            \"keyword\": \"do <statement> while(condition);\",\n            \"definition\": \"Statement that runs before checking that a condition is valid.\"\n        },\n        \"foreach\": {\n            \"keyword\": \"for (incrementor of <enumerable object>)\",\n            \"definition\": \"Statement iterates over the entire enumerable object.\"\n        },\n        \"function\": {\n            \"keyword\": \"<function name>(<parameters>)\",\n            \"definition\": \"A group of statements that together perform a task.\"\n        },\n        \"class\": {\n            \"keyword\": \"class <class Name>\",\n            \"definition\": \"A data type that can hold its own members.\"\n        }\n    },\n    \"Python\": {\n        \"boolean\": {\n            \"keyword\": \"Python is dynamically typed so there is no need to declare the data type.\",\n            \"definition\": \"True/false.\"\n        },\n        \"byte\": {\n            \"keyword\": \"Python is dynamically typed so there is no need to declare the data type.\",\n            \"definition\": \"A number from -256 to 255.\"\n        },\n \n        \"char\": {\n            \"keyword\": \"Python is dynamically typed so there is no need to declare the data type.\",\n            \"definition\": \"A unicode character.\"\n        },\n        \"short\": {\n            \"keyword\": \"Python does not have a short declaration but you can use short integers in arrays via a=array(\\\"h\\\")\",\n            \"definition\": \"A number from -32,768 to 32,767.\"\n        },\n        \"int\": {\n            \"keyword\": \"Python is dynamically typed so there is no need to declare the data type.\",\n            \"definition\": \"A number from -2,147,483,648 to 2,147,483,647.\"\n        },\n        \"float\": {\n            \"keyword\": \"Python is dynamically typed so there is no need to declare the data type.\",\n            \"definition\": \"A number between Â±3.40282347E+38F.\"\n        },\n        \"long\": {\n            \"keyword\": \"Python is dynamically typed so there is no need to declare the data type.\",\n            \"definition\": \"A number from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,80\"\n        },\n        \"double\": {\n            \"keyword\": \"Python is dynamically typed so there is no need to declare the data type.\",\n            \"definition\": \"A number between Â±1.79769313486231570E+308\"\n        },\n        \"print\": {\n            \"keyword\": \"print(<text>)\",\n            \"definition\": \"Displays text on a screen.\"\n        },\n        \"if\": {\n            \"keyword\": \"if condition:\",\n            \"defintion\": \"Conditional that if true, will execute a function or displays text.\"\n        },\n        \"elseif\": {\n            \"keyword\": \"elif condition:\",\n            \"defintion\": \"Conditional that if the if statement returns false, will execute a function or displays text.\"\n        },\n        \"else\": {\n            \"keyword\": \"else\",\n            \"defintion\": \"Conditional that if the if statement and any else if statements return false, will execute a function or displays text.\"\n        },\n        \"for\": {\n            \"keyword\": \"for <iterator>, <condition>:\",\n            \"definition\": \"Statement that allows iteration so that a piece of code is continuously executed.\"\n        },\n        \"while\": {\n            \"keyword\": \"while condition:\",\n            \"definition\": \"Statement that continuously executes based a on a boolean condition.\"\n        },\n        \"dowhile\": {\n            \"keyword\": \"There is no built in do-while loop in Python\",\n            \"definition\": \"Statement that runs before checking that a condition is valid.\"\n        },\n        \"foreach\": {\n            \"keyword\": \"for <iterator> in <object>\",\n            \"definition\": \"Statement iterates over the entire enumerable object.\"\n        },\n        \"function\": {\n            \"keyword\": \"def <function name>(<parameters>):\",\n            \"definition\": \"A group of statements that together perform a task.\"\n        },\n        \"class\": {\n            \"keyword\": \"class <class Name>:\",\n            \"definition\": \"A data type that can hold its own members.\"\n        }\n \n    }\n}\n\nexport {keywords};","const colorCode = {\n    \"Java\": \"Red\",\n    \"C++\": \"DeepPink\",\n    \"C#\": \"DarkGreen\",\n    \"JavaScript\": \"Yellow\",\n    \"Python\": \"SteelBlue\"\n}\n\nexport {colorCode}","import React, { Component } from \"react\";\nimport {colorCode} from \"./colorCode\";\n\nclass LanguageDetect extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            //{this.state.language}\n            <p>In: <span style={{color: colorCode[this.props.language]}}>{this.props.language}</span></p>\n        )\n    }\n}\n\nexport default LanguageDetect;","import React, { Component } from \"react\";\nimport {keywords} from \"./keywords\";\nimport LanguageDetect from \"./LanguageDetect\";\n\nclass Translator extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            from: \"\",\n            keyword: \"boolean\",\n            to: \"\",\n            resultLang: \"\",\n            syntax: \"\",\n            toDefinition: \"\",\n        }\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.from === \"\" || this.state.to === \"\"){\n            alert(\"Please select a language.\")\n        }\n        else if (this.state.from === this.state.to){\n            alert(\"Please select different languages\")\n        }\n        else{\n            if (keywords[this.state.from].hasOwnProperty(this.state.keyword)){\n                const syntax = keywords[this.state.to][this.state.keyword][\"keyword\"];\n                const def = keywords[this.state.to][this.state.keyword][\"definition\"];\n                this.setState({\n                    resultLang: this.state.to,\n                    syntax: syntax,\n                    toDefinition: def\n                })\n            }\n        }\n    }\n\n    renderDef = () => {\n        if (this.state.toDefinition === \"\"){\n            return <div></div>\n        }\n        return (\n            <div>\n                <LanguageDetect language={this.state.resultLang}/>\n                <p>Syntax: {this.state.syntax}</p>\n                <p>Definition: {this.state.toDefinition}</p>\n            </div>\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>Code Translator</h1>\n                <p>Have you ever forgotten a specific syntax in a new language you're learning? Or you are you trying to get back and need a refresher? Code Translator will help you find a keyword in what ever language you will need.</p>\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"row\">\n                        <div className=\"cell\">\n                            <select name=\"from\" value={this.state.from} onChange={this.handleChange}>\n                                <option value=\"\"></option>\n                                <option value=\"C++\">C++</option>\n                                <option value=\"Java\">Java</option>\n                                <option value=\"C#\">C#</option>\n                                <option value=\"JavaScript\">JavaScript</option>\n                                <option value=\"Python\">Python</option>\n                            </select>\n                        </div>\n                        <div id=\"keyword\" className=\"cell\">\n                            <select name=\"keyword\" value={this.state.keyword} onChange={this.handleChange}>\n                                <option value=\"boolean\">boolean</option>\n                                <option value=\"byte\">byte</option>\n                                <option value=\"character\">char</option>\n                                <option value=\"short\">short</option>\n                                <option value=\"int\">int</option>\n                                <option value=\"float\">float</option>\n                                <option value=\"long\">long</option>\n                                <option value=\"double\">double</option>\n                                <option value=\"print\">print</option>\n                                <option value=\"if\">if</option>\n                                <option value=\"elseif\">else if</option>\n                                <option value=\"else\">else</option>\n                                <option value=\"for\">for</option>\n                                <option value=\"while\">while</option>\n                                <option value=\"dowhile\">do while</option>\n                                <option value=\"foreach\">foreach</option>\n                                <option value=\"function\">function</option>\n                                <option value=\"class\">class</option>\n                            </select>\n                            <div className=\"cell\">\n                                <input type=\"submit\" value=\"Translate!\" />\n                            </div>\n                        </div>\n                        <div className=\"cell\">\n                            <select name=\"to\" value={this.state.to} onChange={this.handleChange}>\n                                <option value=\"\"></option>\n                                <option value=\"C++\">C++</option>\n                                <option value=\"Java\">Java</option>\n                                <option value=\"C#\">C#</option>\n                                <option value=\"JavaScript\">JavaScript</option>\n                                <option value=\"Python\">Python</option>\n                            </select>\n                        </div>\n                        </div>\n                    </form>\n                {this.renderDef()}\n            </div>\n        )\n    }\n}\n\nexport default Translator;","import React, { Component } from \"react\";\nimport Translator from \"./components/Translator\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"whole\">\n        <Translator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}